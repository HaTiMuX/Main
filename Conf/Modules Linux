							   Les modules Linux

***Présentation 
Un module est un morceau de code permettant d'ajouter des fonctionnalités au noyau : pilotes de périphériques matériels, protocoles réseaux, etc… 
Il peut être chargé dynamiquement sans avoir besoin de recompiler le noyau (avec la commande insmod ou modprobe) ou de redémarrer le système. 
Les modules sont exécutés dans l'espace mémoire du noyau:
    Ils possèdent le contrôle total de la machine
    Ils peuvent détourner ou créer un appel système


***Gestion des modules
**Lister les modules actifs
$lsmod | more
Il y a des dépendances entre les modules. Il faut en tenir compte lorsque l'on veut décharger des modules. 
iwl4965               112706  0 
iwlegacy              100487  1 iwl4965

**Information sur un module
$ modinfo module_name
Si l'on ne désire qu'une information précise, on peut spécifier le champ (field) à afficher avec l'option -F:
$ modinfo video -F description 

**Chargement/Déchargement d'un module
Charger:
$ sudo modprobe -a module_name
Décharger
$ sudo modprobe -r module_name

**Options d'un module
Certains modules possèdent des options ("parm"). Ces options permettent un plus grand contrôle sur le module en lui-même. 
Lister les paramètres d'un module:
$modinfo video -F parm
Modifier un paramètre:
$modprobe video brightness_switch_enabled=1
Pour que cela soit pris en compte directement au lancement il faut éditer le fichier /etc/modprobe.d/alsa-base.conf et y ajouter une ligne.
exp: options snd_ens1371 joystick_port=1

**Modules au démarrage
Il est possible de spécifier des modules à charger au démarrage.
La liste des modules à charger explicitement au démarrage est dressée dans le fichier /etc/modules.
Les modules sont chargés dans l'ordre dans lequel ils sont listés.

**Empêcher le chargement d'un module
Il peut parfois être utile d'empêcher le noyau de charger un module automatiquement, par exemple si celui-ci pose des problèmes de stabilité. Un module prohibé ne sera pas chargé au démarrage ou au branchement à chaud du périphérique, mais pourra quand-même être chargé à la main, par exemple à l'aide de modprobe.
La liste des modules que le noyau n'a pas le droit de charger se trouve dans le fichier /etc/modprobe.d/blacklist
Une ligne a la forme suivante: blacklist module_name
Après la modification il faut exécuter la commande suivante:
$sudo update-initramfs -u

**Lier un module à un périphérique
Il est possible de lier un module à un périphérique de façon à ce que le noyau puisse charger automatiquement ce module lors de la détection du périphérique.
Il suffit d'ajouter la ligne suivante dans /etc/modprobe.conf:  alias périphérique module

***Utilitaires pour les modules
**modconf

**module-assistant
Module-assistant est un outil simplifiant la création de paquets contenant des modules. Il aide les utilisateurs et contributeurs en s'occupant des modules externes du kernel empaquetés pour Debian. Il peut :
* Préparer automatiquement l'environnement de compilation (ex: détection et installation automatiques des sources et les headers du kernel requis)
* Téléchargements automatiques des codes sources des modules
* Configuration et maintien des paquets des modules externes et compilés localement
* Compilations multiples pour versions du kernel multiples semi-automatiques
Il contient également des Frameworks utilisés par les scripts de compilation qui accompagnent les paquets modules-source dans Debian. 

**Hardinfo
Hardinfo n'est pas vraiment un programme spécifique pour les modules, mais il propose un grand nombres d'informations sur votre ordinateur, dont les modules utilisés par les périphériques. 
Après l'installation, il est dans Applications → Outils système → System Profiler and Benchmark 


