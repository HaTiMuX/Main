https://help.github.com/articles/create-a-repo

Step 1: Create a git repository
mkdir ~/Hello-World
# Creates a directory for your project called "Hello-World" in your user directory

cd ~/Hello-World
# Changes the current working directory to your newly created directory

git init
# Sets up the necessary Git files
#Initialized empty Git repository in /home/hatim/Desktop/Hello-World/.git/

touch README
# Creates a file called "README" in your Hello-World directory



Step 2: Commit your updates
#A commit is essentially a snapshot of all the files in your project at a particular point in time.

git add README # Stages your README file, adding it to the list of files to be committed
git add -f *   # Adds all files existing in the current directory
git rm -r Dir  # Removes a directory from the git repository


git commit -m 'first commit'
# Commits your files, adding the message "first commit"


Step 3: Push your commit
#So far, everything you've done has been in your local repository, meaning you still haven't done anything on GitHub yet. 
#To connect your local repository to your GitHub account, you will need to set a remote for your repository and push your commits to it.

git remote add origin https://github.com/username/Hello-World.git
git remote add gui-stable1 https://github.com/hatimux/SFC-GUI.git
git remote add init https://github.com/hatimux/SFC-Routing.git
# Creates a remote named "origin" pointing at your GitHub repository

git push origin master
git push sfc-gui master
# Sends your commits in the "master" branch to GitHub